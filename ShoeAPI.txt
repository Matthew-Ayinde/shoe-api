there's a codebase here of a shoe API store. Analyze and index it completely properly and carefully there are some files and code missing as everything is not being generated. Generate everything fully and add a full documentation file and folder and also add comments in the code explaining every detail and how to create the entire codebase from scratch using best practices. also analyze the whole code and structure it using best practices.


Questions you may need answered...

Technology Stack Preferences: I see you're using Node.js, Express, MongoDB, and various other technologies. Are you happy with this stack, or would you prefer any changes?
Authentication: I see both JWT and Passport (including Google OAuth) are set up. Do you want to keep both authentication methods?
Payment Integration: I see Stripe is included. Do you want me to implement the full payment processing with webhooks and everything?
Frontend Integration: Should I include API documentation that shows how a frontend (React/Next.js) would integrate with this API?
Deployment: Do you want deployment configurations for specific platforms (AWS, Heroku, Docker, etc.)?
Testing Coverage: How comprehensive should the test suite be? Unit tests, integration tests, or both?
Real-time Features: I see Socket.IO is set up. What real-time features do you want (order tracking, inventory updates, notifications)?
Admin Dashboard: Should I create comprehensive admin routes for managing products, orders, users, etc.?
Email Templates: Do you want HTML email templates for order confirmations, password resets, etc.?
File Structure: Are you happy with the current structure, or would you like me to reorganize anything?


Answers...

1. I am happy with my current stack. However, highlight in details what each stack does and how it is used.
2. yes, i want to keep both
3. yes please.
4. yes please. implement this in details
5. Docker is fine
6. both please. also explain the function of each tests and how it is used in details
7. i want a real time features for everything possible
8. yes, please. in details
9. yes please.
10. just make sure the code is as Optimized as possible.



Also, remember to include detailed instructions on how to setup and run the entire codebase.